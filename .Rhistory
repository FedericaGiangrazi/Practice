names(GWASdatacases) <- c("SNP", "SAMPLE", "GENOTYPE", "SCORE")
GWASdatacontrols <- WTCCC01_03
names(GWASdatacontrols) <- c("SNP", "SAMPLE", "GENOTYPE", "SCORE")
SNPS <- HT_SNPS
SNPS <- CD_SNPS
RISKallele <- CD_RISKallele
cases <- GWASdatacases[GWASdatacases$SNP %in% SNPS,]
cases <- unique(cases)
controls <- GWASdatacontrols[GWASdatacontrols$SNP %in% SNPS,]
controls <- unique(controls)
SAMPLES <- unique(cases$SAMPLE)
SAMPLES2 <- unique(controls$SAMPLE)
df <- data.frame(unlist(SAMPLES))
df2 <- data.frame(unlist(SAMPLES2))
for (i in 1:(length(SNPS)+1)){
df <- cbind(df, rep(NA, length(SAMPLES)))
}
names(df) <- c("subject", "class", SNPS)
df$class <- c(rep("case", length(SAMPLES)))
for (i in 1:(length(SNPS)+1)){
df2 <- cbind(df2, rep(NA, length(SAMPLES2)))
}
names(df2) <- c("subject", "class", SNPS)
df2$class <- c(rep("control", length(SAMPLES2)))
library(stringr)
for (i in 1:length(SAMPLES)){
print(i)
data <- unique(cases[cases$SAMPLE == SAMPLES[[i]],])
for (j in 1:length(SNPS)){
#print(j)
data2 <- data[data$SNP == SNPS[[j]],]
if((j%%2 == 0) || (j%%2 == 1)){
#df[SNPS[[j]]][[1]][[i]] = str_count(data2$GENOTYPE, RISKallele[[j]])
#if (grepl(RISKallele[[j]], data2$GENOTYPE)){
if (paste(RISKallele[[j]],RISKallele[[j]], sep= "") == data2$GENOTYPE){
df[SNPS[[j]]][[1]][[i]] = 1
}
else{
df[SNPS[[j]]][[1]][[i]] = 0
}
}
else{
if (paste(RISKallele[[j]],RISKallele[[j]], sep= "") == data2$GENOTYPE){
df[SNPS[[j]]][[1]][[i]] = 1
}
else{
df[SNPS[[j]]][[1]][[i]] = 0
}
}
}
}
for (i in 1:length(SAMPLES2)){
print(i)
data <- unique(controls[controls$SAMPLE == SAMPLES2[[i]],])
for (j in 1:length(SNPS)){
#print(j)
data2 <- data[data$SNP == SNPS[[j]],]
#df2[SNPS[[j]]][[1]][[i]] = str_count(data2$GENOTYPE, RISKallele[[j]])
if((j%%2 == 0) || (j%%2 == 1)){
#if (grepl(RISKallele[[j]], data2$GENOTYPE)){
if (paste(RISKallele[[j]],RISKallele[[j]], sep= "") == data2$GENOTYPE){
df2[SNPS[[j]]][[1]][[i]] = 1
}
else{
df2[SNPS[[j]]][[1]][[i]] = 0
}
}
else{
if (paste(RISKallele[[j]],RISKallele[[j]], sep= "") == data2$GENOTYPE){
df2[SNPS[[j]]][[1]][[i]] = 1
}
else{
df2[SNPS[[j]]][[1]][[i]] = 0
}
}
}
}
dataset_03 <- rbind(df, df2)
write.csv(dataset_03,'/Users/wishart/Desktop/GWAS_project/data (from literature)/resampled WTCCC(all SNPs)actualdata/out/dataset_03_Resampled.csv', row.names=F)
setwd("/Users/wishart/Desktop/GWAS_project/")
folderPath <- "data (from literature)"
filenameroot = "WTCCC(all SNPs)actualdata"
filenameroot2 = "WTCCC(all SNPs)"
filename = paste("data (from literature)/resampled", filenameroot, sep= " ")
resultsfilename = paste("results", filenameroot, sep= " ")
dir.create(filename)
dir.create(resultsfilename)
source("Rscripts/modeling/_modelingFunctions_lda.R")
studies <- studies[grep(".csv", studies)]
folderOut <- filename
for (j in 1:length(studies)){
source("Rscripts/modeling/_modelingFunctions_lda.R")
batchAnalysis(paste(filename, "/out", sep=""), resultsfilename, studies[[j]], verbose = FALSE, outerFolds = 3L,
outerRep = 2L)#, classifier = "classif.logreg")
ROC_true <- readRDS("ro.rds")
}
studies <- dir(paste(filename, "/out", sep=""))
coefs = read.csv("/Users/wishart/Desktop/GWAS_project/results WTCCC(all SNPs)actualdata/dataset_03/coef.csv")
Ds <- list()
Dn <- list()
for (i in 1:length(RISKallele)){
z = 0
uniq <- unique(cases[cases$SNP == SNPS[[i]], ])
tab <- table(uniq$GENOTYPE)
tab2 <- unlist(lapply(tab,function(x) x[x!=0]))
if(length(names(tab2))>3){
tab2 <- unlist(lapply(tab,function(x) x[x>min(tab2)]))
}
for (j in 1:length(names(tab2))){
# uniq <- unique(strsplit(names(tab2)[[j]], ""))
# uniq <- unique(unlist(uniq))
z = z+ str_count(names(tab2)[[j]], RISKallele[[i]])*tab2[j][[1]]
#z = z+ ifelse(RISKallele[[i]] %in% uniq, 1, 0)*tab2[j][[1]]
}
Ds <- append(Ds, z)
Dn <- append(Dn, 2*length(SAMPLES)-z)
}
Hs <- list()
Hn <- list()
for (i in 1:length(SNPS)){
z = 0
uniq <- unique(controls[controls$SNP == SNPS[[i]], ])
tab <- table(uniq$GENOTYPE)
tab2 <- unlist(lapply(tab,function(x) x[x!=0]))
if(length(names(tab2))>3){
tab2 <- unlist(lapply(tab,function(x) x[x>min(tab2)]))
}
for (j in 1:length(names(tab2))){
# uniq <- unique(strsplit(names(tab2)[[j]], ""))
# uniq <- unique(unlist(uniq))
z = z+ str_count(names(tab2)[[j]], RISKallele[[i]])*tab2[j][[1]]
#z = z+ ifelse(RISKallele[[i]] %in% uniq, 1, 0)*tab2[j][[1]]
}
Hs <- append(Hs, z)
Hn <- append(Hn, 2*length(SAMPLES2)-z)
}
OR <- list()
for (i in 2:(length(SNPS)+1)){
print(i)
OR <- append(OR, exp(coefs[i,2]))
}
OR <- unlist(OR)
print(OR)
RAF = as.numeric(unlist(Hs))/(2*length(SAMPLES2))
modeltype <- c(rep(NA, length(SNPS)))
for (i in 1:length(SNPS)){
if(i%%2==1){
modeltype[i] <- "dominant"
}
else{
modeltype[i] <- "recessive"
}
}
for (i in 1:length(OR)){
if(OR[i]>1){
OR[i]=1/OR[i]
RAF[i]=1-RAF[i]
if (modeltype[i] == "dominant"){
modeltype[i] = "recessive"
}
else{
modeltype[i] = "dominant"
}
}
}
summarydf <- data.frame(c(rep(NA, length(SNPS))), c(rep(NA, length(SNPS))), unlist(SNPS),
c(rep(length(SAMPLES2), length(SNPS))), c(rep(length(SAMPLES), length(SNPS))),
RAF, OR, modeltype) #c(rep("dominant", length(SNPS))))
names(summarydf) <- c("phenotype", "dataset", "accession", "control_size", "case_size", "risk_allele_freq", "OR", "model")
write.csv(summarydf,'/Users/wishart/Desktop/GWAS_project/data (from literature)/summarydf_03.csv', row.names=F)
WTCCC03 <- read_tsv("/Users/wishart/Desktop/GWAS_project/WTCCC04.txt")
WTCCC01_03 <- read_tsv("/Users/wishart/Desktop/GWAS_project/WTCCC01_04.txt")
GWASdatacases <- WTCCC03
names(GWASdatacases) <- c("SNP", "SAMPLE", "GENOTYPE", "SCORE")
GWASdatacontrols <- WTCCC01_03
names(GWASdatacontrols) <- c("SNP", "SAMPLE", "GENOTYPE", "SCORE")
SNPS <- CD_SNPS
RISKallele <- CD_RISKallele
SNPS <- CAD_SNPS
RISKallele <- CAD_RISKallele
cases <- GWASdatacases[GWASdatacases$SNP %in% SNPS,]
cases <- unique(cases)
controls <- GWASdatacontrols[GWASdatacontrols$SNP %in% SNPS,]
controls <- unique(controls)
SAMPLES <- unique(cases$SAMPLE)
SAMPLES2 <- unique(controls$SAMPLE)
df <- data.frame(unlist(SAMPLES))
df2 <- data.frame(unlist(SAMPLES2))
for (i in 1:(length(SNPS)+1)){
df <- cbind(df, rep(NA, length(SAMPLES)))
}
names(df) <- c("subject", "class", SNPS)
df$class <- c(rep("case", length(SAMPLES)))
for (i in 1:(length(SNPS)+1)){
df2 <- cbind(df2, rep(NA, length(SAMPLES2)))
}
names(df2) <- c("subject", "class", SNPS)
df2$class <- c(rep("control", length(SAMPLES2)))
library(stringr)
for (i in 1:length(SAMPLES)){
print(i)
data <- unique(cases[cases$SAMPLE == SAMPLES[[i]],])
for (j in 1:length(SNPS)){
#print(j)
data2 <- data[data$SNP == SNPS[[j]],]
if((j%%2 == 0) || (j%%2 == 1)){
#df[SNPS[[j]]][[1]][[i]] = str_count(data2$GENOTYPE, RISKallele[[j]])
#if (grepl(RISKallele[[j]], data2$GENOTYPE)){
if (paste(RISKallele[[j]],RISKallele[[j]], sep= "") == data2$GENOTYPE){
df[SNPS[[j]]][[1]][[i]] = 1
}
else{
df[SNPS[[j]]][[1]][[i]] = 0
}
}
else{
if (paste(RISKallele[[j]],RISKallele[[j]], sep= "") == data2$GENOTYPE){
df[SNPS[[j]]][[1]][[i]] = 1
}
else{
df[SNPS[[j]]][[1]][[i]] = 0
}
}
}
}
for (i in 1:length(SAMPLES2)){
print(i)
data <- unique(controls[controls$SAMPLE == SAMPLES2[[i]],])
for (j in 1:length(SNPS)){
#print(j)
data2 <- data[data$SNP == SNPS[[j]],]
#df2[SNPS[[j]]][[1]][[i]] = str_count(data2$GENOTYPE, RISKallele[[j]])
if((j%%2 == 0) || (j%%2 == 1)){
#if (grepl(RISKallele[[j]], data2$GENOTYPE)){
if (paste(RISKallele[[j]],RISKallele[[j]], sep= "") == data2$GENOTYPE){
df2[SNPS[[j]]][[1]][[i]] = 1
}
else{
df2[SNPS[[j]]][[1]][[i]] = 0
}
}
else{
if (paste(RISKallele[[j]],RISKallele[[j]], sep= "") == data2$GENOTYPE){
df2[SNPS[[j]]][[1]][[i]] = 1
}
else{
df2[SNPS[[j]]][[1]][[i]] = 0
}
}
}
}
dataset_03 <- rbind(df, df2)
write.csv(dataset_03,'/Users/wishart/Desktop/GWAS_project/data (from literature)/resampled WTCCC(all SNPs)actualdata/out/dataset_03_Resampled.csv', row.names=F)
setwd("/Users/wishart/Desktop/GWAS_project/")
folderPath <- "data (from literature)"
filenameroot = "WTCCC(all SNPs)actualdata"
filenameroot2 = "WTCCC(all SNPs)"
filename = paste("data (from literature)/resampled", filenameroot, sep= " ")
resultsfilename = paste("results", filenameroot, sep= " ")
dir.create(filename)
dir.create(resultsfilename)
folderOut <- filename
source("Rscripts/modeling/_modelingFunctions_lda.R")
studies <- dir(paste(filename, "/out", sep=""))
studies <- studies[grep(".csv", studies)]
for (j in 1:length(studies)){
source("Rscripts/modeling/_modelingFunctions_lda.R")
batchAnalysis(paste(filename, "/out", sep=""), resultsfilename, studies[[j]], verbose = FALSE, outerFolds = 3L,
outerRep = 2L)#, classifier = "classif.logreg")
ROC_true <- readRDS("ro.rds")
}
coefs = read.csv("/Users/wishart/Desktop/GWAS_project/results WTCCC(all SNPs)actualdata/dataset_03/coef.csv")
Ds <- list()
Dn <- list()
for (i in 1:length(RISKallele)){
z = 0
uniq <- unique(cases[cases$SNP == SNPS[[i]], ])
tab <- table(uniq$GENOTYPE)
tab2 <- unlist(lapply(tab,function(x) x[x!=0]))
if(length(names(tab2))>3){
tab2 <- unlist(lapply(tab,function(x) x[x>min(tab2)]))
}
for (j in 1:length(names(tab2))){
# uniq <- unique(strsplit(names(tab2)[[j]], ""))
# uniq <- unique(unlist(uniq))
z = z+ str_count(names(tab2)[[j]], RISKallele[[i]])*tab2[j][[1]]
#z = z+ ifelse(RISKallele[[i]] %in% uniq, 1, 0)*tab2[j][[1]]
}
Ds <- append(Ds, z)
Dn <- append(Dn, 2*length(SAMPLES)-z)
}
Hs <- list()
Hn <- list()
for (i in 1:length(SNPS)){
z = 0
uniq <- unique(controls[controls$SNP == SNPS[[i]], ])
tab <- table(uniq$GENOTYPE)
tab2 <- unlist(lapply(tab,function(x) x[x!=0]))
if(length(names(tab2))>3){
tab2 <- unlist(lapply(tab,function(x) x[x>min(tab2)]))
}
for (j in 1:length(names(tab2))){
# uniq <- unique(strsplit(names(tab2)[[j]], ""))
# uniq <- unique(unlist(uniq))
z = z+ str_count(names(tab2)[[j]], RISKallele[[i]])*tab2[j][[1]]
#z = z+ ifelse(RISKallele[[i]] %in% uniq, 1, 0)*tab2[j][[1]]
}
Hs <- append(Hs, z)
Hn <- append(Hn, 2*length(SAMPLES2)-z)
}
OR <- list()
for (i in 2:(length(SNPS)+1)){
print(i)
OR <- append(OR, exp(coefs[i,2]))
}
OR <- unlist(OR)
print(OR)
RAF = as.numeric(unlist(Hs))/(2*length(SAMPLES2))
modeltype <- c(rep(NA, length(SNPS)))
for (i in 1:length(SNPS)){
if(i%%2==1){
modeltype[i] <- "dominant"
}
else{
modeltype[i] <- "recessive"
}
}
for (i in 1:length(OR)){
if(OR[i]>1){
OR[i]=1/OR[i]
RAF[i]=1-RAF[i]
if (modeltype[i] == "dominant"){
modeltype[i] = "recessive"
}
else{
modeltype[i] = "dominant"
}
}
}
summarydf <- data.frame(c(rep(NA, length(SNPS))), c(rep(NA, length(SNPS))), unlist(SNPS),
c(rep(length(SAMPLES2), length(SNPS))), c(rep(length(SAMPLES), length(SNPS))),
RAF, OR, modeltype) #c(rep("dominant", length(SNPS))))
names(summarydf) <- c("phenotype", "dataset", "accession", "control_size", "case_size", "risk_allele_freq", "OR", "model")
write.csv(summarydf,'/Users/wishart/Desktop/GWAS_project/data (from literature)/summarydf_03.csv', row.names=F)
setwd("/Users/wishart/Desktop/GWAS_project/")
filenameroot = "twesting"
folderPath <- paste("data (from literature)/", filenameroot, sep= "")
filename = paste("data (from literature)/resampled", filenameroot, sep= " ")
resultsfilename = paste("results", filenameroot, sep= " ")
dir.create(filename)
dir.create(resultsfilename)
folderOut <- filename
source("Rscripts/modeling/_modelingFunctions_lda.R")
studies <- dir(paste(filename, "/out", sep=""))
studies <- studies[grep(".csv", studies)]
source("./Rscripts/resample/GWAS_functions.0,1,2genotype (attempt 3).R")
files <- list.files(folderPath)
files <- files[grep(".csv", files)]
aucout <- matrix(NA, nrow=length(files), ncol=2)
for (j in 1:length(files)){
Ncontrol = 5000
Ncase = 5000
#source("./Rscripts/resample/GWAS_functions.3.R")
source("./Rscripts/resample/GWAS_functions.0,1,2genotype (attempt 3).R")
genereteBatch(folderPath, folderOut, Ncontrol, Ncase, files[[j]])
studies <- dir(paste(filename, "/out", sep=""))
## only csv files
studies <- studies[grep(".csv", studies)]
source("Rscripts/modeling/_modelingFunctions_lda.R")
batchAnalysis(paste(filename, "/out", sep=""), resultsfilename, studies[[j]], verbose = FALSE, outerFolds = 3L,
outerRep = 2L)#, classifier = "classif.logreg")
studyname = substring(files[[j]], 1, 13)
aucout[j,] <- c(studyname, aucanalysis)
colnames(aucout) <- c("Study", "Simulated AUC")
}
setwd("/Users/wishart/Desktop/GWAS_project/")
filenameroot = "twesting"
folderPath <- paste("data (from literature)/", filenameroot, sep= "")
filename = paste("data (from literature)/resampled", filenameroot, sep= " ")
resultsfilename = paste("results", filenameroot, sep= " ")
dir.create(filename)
dir.create(resultsfilename)
folderOut <- filename
source("Rscripts/modeling/_modelingFunctions_lda.R")
studies <- dir(paste(filename, "/out", sep=""))
studies <- studies[grep(".csv", studies)]
source("./Rscripts/resample/GWAS_functions.0,1,2genotype (attempt 3).R")
files <- list.files(folderPath)
files <- files[grep(".csv", files)]
aucout <- matrix(NA, nrow=length(files), ncol=2)
for (j in 1:length(files)){
Ncontrol = 5000
Ncase = 5000
#source("./Rscripts/resample/GWAS_functions.3.R")
source("./Rscripts/resample/GWAS_functions.0,1,2genotype (attempt 3).R")
genereteBatch(folderPath, folderOut, Ncontrol, Ncase, files[[j]])
studies <- dir(paste(filename, "/out", sep=""))
## only csv files
studies <- studies[grep(".csv", studies)]
source("Rscripts/modeling/_modelingFunctions_lda.R")
batchAnalysis(paste(filename, "/out", sep=""), resultsfilename, studies[[j]], verbose = FALSE, outerFolds = 3L,
outerRep = 2L)#, classifier = "classif.logreg")
studyname = substring(files[[j]], 1, 13)
aucout[j,] <- c(studyname, aucanalysis)
colnames(aucout) <- c("Study", "Simulated AUC")
}
filenameroot = "twesting"
folderPath <- paste("data (from literature)/", filenameroot, sep= "")
filename = paste("data (from literature)/resampled", filenameroot, sep= " ")
resultsfilename = paste("results", filenameroot, sep= " ")
dir.create(filename)
dir.create(resultsfilename)
folderOut <- filename
source("Rscripts/modeling/_modelingFunctions_lda.R")
studies <- dir(paste(filename, "/out", sep=""))
studies <- studies[grep(".csv", studies)]
source("./Rscripts/resample/GWAS_functions.0,1,2genotype (attempt 3).R")
files <- list.files(folderPath)
files <- files[grep(".csv", files)]
aucout <- matrix(NA, nrow=length(files), ncol=2)
for (j in 1:length(files)){
Ncontrol = 5000
Ncase = 5000
#source("./Rscripts/resample/GWAS_functions.3.R")
source("./Rscripts/resample/GWAS_functions.0,1,2genotype (attempt 3).R")
genereteBatch(folderPath, folderOut, Ncontrol, Ncase, files[[j]])
studies <- dir(paste(filename, "/out", sep=""))
## only csv files
studies <- studies[grep(".csv", studies)]
source("Rscripts/modeling/_modelingFunctions_lda.R")
batchAnalysis(paste(filename, "/out", sep=""), resultsfilename, studies[[j]], verbose = FALSE, outerFolds = 3L,
outerRep = 2L)#, classifier = "classif.logreg")
studyname = substring(files[[j]], 1, 13)
aucout[j,] <- c(studyname, aucanalysis)
colnames(aucout) <- c("Study", "Simulated AUC")
}
setwd("/Users/wishart/Desktop/GWAS_project/")
filenameroot = "twesting"
folderPath <- paste("data (from literature)/", filenameroot, sep= "")
filename = paste("data (from literature)/resampled", filenameroot, sep= " ")
resultsfilename = paste("results", filenameroot, sep= " ")
dir.create(filename)
dir.create(resultsfilename)
folderOut <- filename
source("Rscripts/modeling/_modelingFunctions_lda.R")
studies <- dir(paste(filename, "/out", sep=""))
studies <- studies[grep(".csv", studies)]
source("./Rscripts/resample/GWAS_functions.0,1,2genotype (attempt 3).R")
files <- list.files(folderPath)
files <- files[grep(".csv", files)]
aucout <- matrix(NA, nrow=length(files), ncol=2)
for (j in 1:length(files)){
Ncontrol = 5000
Ncase = 5000
#source("./Rscripts/resample/GWAS_functions.3.R")
source("./Rscripts/resample/GWAS_functions.0,1,2genotype (attempt 3).R")
genereteBatch(folderPath, folderOut, Ncontrol, Ncase, files[[j]])
studies <- dir(paste(filename, "/out", sep=""))
## only csv files
studies <- studies[grep(".csv", studies)]
source("Rscripts/modeling/_modelingFunctions_lda.R")
batchAnalysis(paste(filename, "/out", sep=""), resultsfilename, studies[[j]], verbose = FALSE, outerFolds = 3L,
outerRep = 2L)#, classifier = "classif.logreg")
studyname = substring(files[[j]], 1, 13)
aucout[j,] <- c(studyname, aucanalysis)
colnames(aucout) <- c("Study", "Simulated AUC")
}
#!/usr/bin/env Rscript
setwd("/Users/wishart/Desktop/GWAS_project_trimmed/")  ### Change this to the appropriate direcetory on your computer!!!
load("my_work_space.RData")
filenameroot = "test"  ### Name of the folder where the csv file is located
folderPath <- paste("Data/", filenameroot, sep= "")
filename = paste("Data/resampled", filenameroot, sep= " ")
resultsfilename = paste("results", filenameroot, sep= " ")
dir.create(filename)
dir.create(resultsfilename)
folderOut <- filename
source("Rscripts/modeling/_modelingFunctions_lda.R")
studies <- dir(paste(filename, "/out", sep=""))
## only csv files
studies <- studies[grep(".csv", studies)]
#source("./Rscripts/resample/GWAS_functions.3.R")
source("./Rscripts/resample/GWAS_functions.0,1,2genotype (attempt 3).R")
files <- list.files(folderPath)
#files <- files[-which(files=="out")]
#files <- files[-which(files=="outDisaggregate")]
files <- files[grep(".csv", files)]
aucout <- matrix(NA, nrow=length(files), ncol=2)
for (j in 1:length(files)){
Ncontrol = 5000
Ncase = 5000
#source("./Rscripts/resample/GWAS_functions.3.R")
source("./Rscripts/resample/GWAS_functions.0,1,2genotype (attempt 3).R")
genereteBatch(folderPath, folderOut, Ncontrol, Ncase, files[[j]])
studies <- dir(paste(filename, "/out", sep=""))
## only csv files
studies <- studies[grep(".csv", studies)]
source("Rscripts/modeling/_modelingFunctions_lda.R")
batchAnalysis(paste(filename, "/out", sep=""), resultsfilename, studies[[j]], verbose = FALSE, outerFolds = 3L,
outerRep = 2L)#, classifier = "classif.logreg")
studyname = substring(files[[j]], 1, 13)
aucout[j,] <- c(studyname, aucanalysis)
colnames(aucout) <- c("Study", "Simulated AUC")
}
#View(aucout)
#write.csv(aucout, "aucout18studies+6(May21).csv")
write.csv(aucout, "twesting.csv")
print("Done")
# It will create two folders in the path set in folderpath above. One will
# It may output some warning messages, due to there are some names that have spaces or special characters (ex:barret's), but performs correctly the analysis.
#--- end of the code
View(aucout)
